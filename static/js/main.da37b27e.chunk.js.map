{"version":3,"sources":["Components/Profile/Profile.module.css","Components/Statistics/Statistics.module.css","Components/Profile/Profile.js","Components/Statistics/Statistics.js","Components/FriendList/FriendList.styles.js","Components/FriendListItem/FriendListItem.styles.js","Components/FriendListItem/FriendListItem.jsx","Components/FriendList/FriendList.jsx","Components/TransactionHistory/TransactionHistory.styles.js","Components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","classes","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","Statistics","title","statistics","statList","map","el","item","style","background","generationColor","key","id","percentage","Math","floor","random","toString","List","styled","ul","Item","li","Status","span","props","isOnline","Avatar","img","Name","p","FriendListItem","FriendList","friends","Table","table","TableHead","thead","TableRow","tr","TableHeader","th","TableBody","tbody","TableData","td","TransactionHistory","items","type","amount","currency","App","user","statisticsArr","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da37b27e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile___sK7F\",\"description\":\"Profile_description__2EtB8\",\"stats\":\"Profile_stats__vxpcL\",\"avatar\":\"Profile_avatar__dvusv\",\"name\":\"Profile_name__3jImY\",\"tag\":\"Profile_tag__Rjpd_\",\"location\":\"Profile_location__2aabI\",\"label\":\"Profile_label__3xt-G\",\"quantity\":\"Profile_quantity__2kBn2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1wi-D\",\"title\":\"Statistics_title__2sPyn\",\"statList\":\"Statistics_statList__1qt_Y\",\"item\":\"Statistics_item__1IVVj\",\"label\":\"Statistics_label__2lsZr\",\"percentage\":\"Statistics_percentage__35fXf\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./Profile.module.css\";\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={classes.profile}>\n      <div className={classes.description}>\n        <img src={avatar} alt=\"user avatar\" className={classes.avatar} />\n        <p className={classes.name}>{name}</p>\n        <p className={classes.tag}>@{tag}</p>\n        <p className={classes.location}>{location}</p>\n      </div>\n\n      <ul className={classes.stats}>\n        <li>\n          <span className={classes.label}>Followers</span>\n          <span className={classes.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={classes.label}>Views</span>\n          <span className={classes.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={classes.label}>Likes</span>\n          <span className={classes.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }),\n};\n\nProfile.defaultProps = {\n  followers: \"-\",\n  views: \"-\",\n  likes: \"-\",\n};\n\nexport default Profile;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./Statistics.module.css\";\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={classes.statistics}>\n      {title && <h2 className={classes.title}>{title}</h2>}\n      <ul className={classes.statList}>\n        {stats.map((el) => (\n          <li\n            className={classes.item}\n            style={{ background: generationColor() }}\n            key={el.id}\n          >\n            <span className={classes.label}>{el.label}</span>\n            <span className={classes.percentage}>{el.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nStatistics.defaultProps = {\n  title: \"\",\n};\n\nconst generationColor = () => {\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n};\n\nexport default Statistics;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  list-style: none;\n\n  width: 500px;\n`;\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n  display: flex;\n  width: 400px;\n  margin: 15px;\n  align-items: center;\n  box-shadow: 0px -1px 13px 0px rgba(0, 0, 0, 0.2);\n  padding: 10px;\n  border-radius: 10px;\n`;\nexport const Status = styled.span`\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  background: ${(props) => (props.isOnline ? \"#00ff00\" : \"#ff0000\")};\n  display: block;\n`;\nexport const Avatar = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 0 5px;\n  border-radius: 5px;\n`;\nexport const Name = styled.p`\n  font: 500 28px \"Montserrat\", sans-serif;\n  color: black;\n  line-height: 20px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item, Status, Avatar, Name } from \"./FriendListItem.styles\";\n\nconst FriendListItem = ({ isOnline, name, avatar }) => {\n  return (\n    <Item>\n      <Status isOnline={isOnline}></Status>\n      <Avatar src={avatar}></Avatar>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FriendListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { List } from \"./FriendList.styles\";\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <List>\n      {friends.map((el) => (\n        <FriendListItem key={el.id} {...el} />\n      ))}\n    </List>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n};\n\nexport default FriendList;\n","import styled from \"styled-components\";\n\nexport const Table = styled.table`\n  margin: 0 auto;\n  width: 75%;\n  height: auto;\n  box-shadow: 0px 4px 7px 1px #cfcfcf;\n  background-color: #fff;\n  text-align: center;\n  color: #747474;\n`;\n\nexport const TableHead = styled.thead`\n  font-size: 13px;\n  font-weight: bold;\n  height: 50px;\n`;\nexport const TableRow = styled.tr`\n  height: 40px;\n  &:nth-child(odd) {\n    background: #ffffff;\n  }\n`;\nexport const TableHeader = styled.th`\n  background-color: #00bcd5;\n  color: #ffffff;\n  padding: 20px 0;\n  text-transform: uppercase;\n`;\n\nexport const TableBody = styled.tbody`\n  background-color: #ecf1f4;\n  height: 40px;\n`;\n\nexport const TableData = styled.td`\n  text-transform: capitalize;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableData,\n  TableBody,\n} from \"./TransactionHistory.styles\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableHeader>TYPE</TableHeader>\n          <TableHeader>AMOUNT</TableHeader>\n          <TableHeader>CURRENCY</TableHeader>\n        </TableRow>\n      </TableHead>\n\n      <TableBody>\n        {items.map(({ id, type, amount, currency }) => (\n          <TableRow key={id}>\n            <TableData>{type}</TableData>\n            <TableData>{amount}</TableData>\n            <TableData>{currency}</TableData>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nTransactionHistory.defaultProps = {\n  // bla: 'test',\n};\n\nexport default TransactionHistory;\n","import React from \"react\";\n\nimport Profile from \"./Components/Profile/Profile\";\nimport user from \"./db/user.json\";\n\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport statisticsArr from \"./db/statistical-data.json\";\n\nimport friends from \"./db/friends.json\";\nimport FriendList from \"./Components/FriendList/FriendList\";\n\nimport transactions from \"./db/transactions.json\";\nimport TransactionHistory from \"./Components/TransactionHistory/TransactionHistory\";\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"upload stats\" stats={statisticsArr} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}